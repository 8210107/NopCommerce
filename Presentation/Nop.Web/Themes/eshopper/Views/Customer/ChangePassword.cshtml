@model ChangePasswordModel
@using Nop.Web.Models.Customer;
@{
    Layout = "_ColumnsTwo";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Account").Text);
}
@section left
    {
    @await Component.InvokeAsync("CustomerNavigation", new { selectedTabId = CustomerNavigationEnum.ChangePassword })
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="features_items my-account-page">
        <!--features_items-->
        <h2 class="title text-center">@T("Account.MyAccount") - @T("Account.ChangePassword")</h2>
        <div class="custom-page-box-div">
            <div class="message-error">
                @Html.ValidationSummary(true)
            </div>
            @*@if (!String.IsNullOrEmpty(Model.Result))
                {
                <div class="result">
                    @Model.Result
                </div>
            }*@
                <div class="fieldset">
                    <div class="">
                        <div class="form-group row">
                            <div class="col-md-3 ">
                                @Html.LabelFor(model => model.OldPassword)
                            </div>
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.OldPassword, new { @class = "gray-input", Type = "password" })
                            </div>
                            <div class="col-md-3">
                                <nop-required />
                                @Html.ValidationMessageFor(model => model.OldPassword)
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-3 ">
                                @Html.LabelFor(model => model.NewPassword)
                            </div>
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.NewPassword, new { @class = "gray-input", Type = "password" })
                            </div>
                            <div class="col-md-3">
                                <nop-required />
                                @Html.ValidationMessageFor(model => model.NewPassword)
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-3 ">
                                @Html.LabelFor(model => model.ConfirmNewPassword)
                            </div>
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.ConfirmNewPassword, new { @class = "gray-input", Type = "password" })
                            </div>
                            <div class="col-md-3">
                                <nop-required />
                                @Html.ValidationMessageFor(model => model.ConfirmNewPassword)
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-3">
                                <label class="sr-only" for="submit_change_password">Submit New Password</label>
                            </div>
                            <div class="col-md-6">
                                <div class="buttons clearfix">
                                    <input type="submit" class="button-1 btn btn-primary" id="submit_change_password" value="@T("Account.ChangePassword.Button")" />
                                </div>
                            </div>
                        </div>
                    </div>
                    
                </div>
            
        </div>
    </div>





}