@model CompareProductsModel
@{
    Layout = "_ColumnsTwo";

    //title
    NopHtml.AddTitleParts(T("PageTitle.CompareProducts").Text);
}
@using Nop.Web.Models.Catalog;
@{
    string columnWidth = "";
    if (Model.Products.Count > 0)
    {
        columnWidth = Math.Round((decimal)(90M / Model.Products.Count), 0).ToString() + "%";
    }


    var uniqueGroupes = new List<ProductSpecificationAttributeGroupModel>();
    foreach (var group in Model.Products.SelectMany(p => p.ProductSpecificationModel.Groups))
    {
        if (!uniqueGroupes.Any(g => g.Id == group.Id))
            uniqueGroupes.Add(group);
    }
}



    <div class="features_items my-account-page"><!--features_items-->
        <h2 class="title text-center">@T("Products.Compare.Title")</h2>
        <div class="custom-page-box-div">
            @if (Model.Products.Count > 0)
            {
                <div class="alignright">
                    <button class="btn btn-primary" onclick="setLocation('@Url.RouteUrl("ClearCompareList")')" >@T("Products.Compare.Clear")</button>
                </div>
                <div class="space15px"></div>

                <div id="cart_items">
    

                    <div class="table-responsive cart_info">
                        <table class="table table-condensed custom-shopping-cart-page">
                            
                            <tbody>
                                <tr class="overview text-center">
                                    <td>
                                        &nbsp;
                                    </td>
                                    @foreach (var product in Model.Products)
                                    {
                                        <td>
                                            <div>

                                                <p class="">
                                                    <img style="width: 100%" alt="@product.DefaultPictureModel.AlternateText" src="@product.DefaultPictureModel.ImageUrl" title="@product.DefaultPictureModel.Title" />
                                                </p>
                                                <button class="btn btn-primary" onclick="setLocation('@Url.RouteUrl("RemoveProductFromCompareList", new { productId = product.Id })')">@T("Common.Remove")</button>
                                            </div>
                                        </td>
                                    }
                                </tr>
                                <tr class="product-name text-center">
                                    <td>
                                        &nbsp;
                                    </td>
                                    @foreach (var product in Model.Products)
                                    {
                                        <td>
                                            <a href="@Url.RouteUrl("Product", new { SeName = product.SeName })">@product.Name</a>
                                        </td>
                                    }
                                </tr>
                                <tr class="">
                                    <td>
                                        <b>@T("Products.Compare.Price")</b>
                                    </td>
                                    @foreach (var product in Model.Products)
                                    {
                                        <td class="text-center">
                                            @product.ProductPrice.Price
                                        </td>
                                    }
                                </tr>
                                @if (Model.IncludeShortDescriptionInCompareProducts)
                                {
                                    <tr class="short-description">
                                        <td>
                                            <b>@T("Products.Compare.ShortDescription")</b>
                                        </td>
                                        @foreach (var product in Model.Products)
                                        {
                                            <td class="text-center">
                                                @Html.Raw(product.ShortDescription)
                                            </td>
                                        }
                                    </tr>
                                }
                                @foreach (var group in uniqueGroupes)
                                {
                                    if (group.Attributes.Count > 0)
                                    {
                                        @if (group.Id > 0)
                                        {
                                            <tr class="specification-group">
                                                <td>
                                                    <label>@group.Name</label>
                                                </td>
                                            </tr>
                                        }

                                        var uniqueGroupAttributes = new List<ProductSpecificationAttributeModel>();
                                        foreach (var attribute in Model.Products.SelectMany(p => p.ProductSpecificationModel.Groups.Where(g => g.Id == group.Id).SelectMany(g => g.Attributes)))
                                        {
                                            if (!uniqueGroupAttributes.Any(sa => sa.Id == attribute.Id))
                                                uniqueGroupAttributes.Add(attribute);
                                        }
                                        @foreach (var specificationAttribute in uniqueGroupAttributes)
                                        {
                                            <tr class="specification">
                                                <td>
                                                    <label>@specificationAttribute.Name</label>
                                                </td>
                                                @foreach (var product in Model.Products)
                                                {
                                                    var foundProductSpec = product.ProductSpecificationModel.Groups
                                                        .Where(g => g.Id == group.Id)
                                                        .SelectMany(g => g.Attributes)
                                                        .FirstOrDefault(sa => sa.Id == specificationAttribute.Id);

                                                    <td style="width: @columnWidth;">
                                                        @if (foundProductSpec != null)
                                                        {
                                                            for (int i = 0; i < foundProductSpec.Values.Count; i++)
                                                            {
                                                                var value = foundProductSpec.Values[i];

                                                                if (string.IsNullOrEmpty(value.ColorSquaresRgb))
                                                                {
                                                                    @Html.Raw(value.ValueRaw)
                                                                }
                                                                else
                                                                {
                                                                    <div class="attribute-squares color-squares">
                                                                        <span class="attribute-square-container" title="@Html.Raw(value.ValueRaw)">
                                                                            <span class="attribute-square" style="background-color: @(value.ColorSquaresRgb);">&nbsp;</span>
                                                                        </span>
                                                                    </div>
                                                                }

                                                                if (i != foundProductSpec.Values.Count - 1)
                                                                {
                                                                    <text>,&nbsp;</text>
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <text>&nbsp;</text>
                                                        }
                                                    </td>
                                                }
                                            </tr>
                                        }
                                    }
                                }
                                @if (Model.IncludeFullDescriptionInCompareProducts)
                                {
                                    <tr class="full-description">
                                        <td>
                                            <b>@T("Products.Compare.FullDescription")</b>
                                        </td>
                                        @foreach (var product in Model.Products)
                                        {
                                            <td class="text-center">
                                                @Html.Raw(product.FullDescription)
                                            </td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                </div>
            }
        </div>
    </div>