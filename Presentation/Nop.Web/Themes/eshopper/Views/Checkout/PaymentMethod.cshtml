@model CheckoutPaymentMethodModel
@using Nop.Web.Models.Checkout;
@{
    Layout = "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Checkout").Text);
}
@await Component.InvokeAsync("CheckoutProgress", new { step = CheckoutProgressStep.Payment })
<div class="container">

    <div class="features_items my-account-page">
        <!--features_items-->
        <h2 class="title text-center">@T("Checkout.SelectPaymentMethod")</h2>
        <div class="custom-page-box-div">
            <div class="row">
                <div class="col-lg-12 cart-box-wr">
                    <div class="coupon-box offer offer-default">
                        <div class="hint">
                            @using (Html.BeginRouteForm("CheckoutPaymentMethod", FormMethod.Post))
                            {
                                if (Model.DisplayRewardPoints && Model.PaymentMethods.Count > 0)
                                {
                                    <div class="use-reward-points">
                                        @Html.EditorFor(model => model.UseRewardPoints)
                                        @string.Format(T("Checkout.UseRewardPoints").Text, Model.RewardPointsToUse, Model.RewardPointsBalance, Model.RewardPointsToUseAmount)
                                    </div>
                                }
                                if (Model.PaymentMethods.Count > 0)
                                {
                                    <div class="method-list">
                                        @for (int i = 0; i < Model.PaymentMethods.Count; i++)
                                        {
                                            var paymentMethod = Model.PaymentMethods[i];
                                            var paymentMethodName = paymentMethod.Name;
                                            if (!String.IsNullOrEmpty(paymentMethod.Fee))
                                            {
                                                paymentMethodName = T("Checkout.SelectPaymentMethod.MethodAndFee", paymentMethodName, paymentMethod.Fee).Text;
                                            }
                                            <div>
                                                <div class="method-name">
                                                    @if (!String.IsNullOrEmpty(paymentMethod.LogoUrl))
                                                    {
                                                        <span class="payment-logo">
                                                            <img src="@paymentMethod.LogoUrl" alt="@paymentMethodName" />
                                                        </span>
                                                    }
                                                    <span class="payment-details">
                                                        <input id="paymentmethod_@(i)" type="radio" name="paymentmethod" value="@(paymentMethod.PaymentMethodSystemName)" checked="@paymentMethod.Selected" />
                                                        <label for="paymentmethod_@(i)">@paymentMethodName</label>
                                                    </span>
                                                </div>
                                            </div>
                                                    <br />
                                        }
                                    </div>
                                            <div class="text-right">
                                                <input type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="btn btn-primary" />
                                            </div>
                                }
                                else
                                {
                                    <div class="message-error">
                                        @T("Checkout.NoPaymentMethods")
                                    </div>
                                }
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container">
    <h2 class="title text-center">@T("Checkout.OrderSummary")</h2>
    @await Component.InvokeAsync("OrderSummary")
</div>


