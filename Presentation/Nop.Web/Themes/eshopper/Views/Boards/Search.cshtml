@model Nop.Web.Models.Boards.SearchModel
@using Nop.Core.Domain.Forums;
@using Nop.Web.Extensions;
@using Nop.Web.Models.Boards;
@using Nop.Web.Models.Common;
@using Nop.Services.Localization
@inject ILocalizationService localizationService
@{
    Layout = "_ColumnsOne";

    NopHtml.AddTitleParts(T("Forum.PageTitle.Search").Text);
}
<script type="text/javascript" asp-location="Footer">
    $(document).ready(function () {
        toggleAdvancedSearch();
        $('#adv').click(function () {
            toggleAdvancedSearch();
        });
    });
    function toggleAdvancedSearch() {
        if ($('#adv').is(':checked')) {
            $('#advanced-search').show();
        }
        else {
            $('#advanced-search').hide();
        }
    }
</script>
<div class="pager upper">
    @{
        var searchterms = Model.SearchTerms;
        string advs = null;
        string within = null;
        string limitDays = null;
        string forumId = null;

        if (Model.ShowAdvancedSearch)
        {
            advs = "true";
            within = Model.WithinSelected.ToString();
            limitDays = Model.LimitDaysSelected.ToString();
            forumId = Model.ForumIdSelected.ToString();
        }

        var pager = await Html.PagerAsync(new PagerModel(localizationService)
        {
            PageSize = Model.TopicPageSize,
            TotalRecords = Model.TopicTotalRecords,
            PageIndex = Model.TopicPageIndex,
            ShowTotalSummary = false,
            RouteActionName = "Search",
            RouteValues = new ForumSearchRouteValues { advs = advs, searchterms = searchterms, forumId = forumId, within = within, limitDays = limitDays },
        });
    }
    @pager
</div>


<div class="container">
    <div class="row forum-group-search-div">
        <div class="col-md-12">
            @await Component.InvokeAsync("ForumBreadcrumb")
        </div>
    </div>
</div>
<div class="container">

    <div class="features_items">
        <!--features_items-->
        <h2 class="title text-center">@T("Forum.Search")</h2>
        <div class="custom-page-box-div forum-group-search-div">
            @using (Html.BeginRouteForm("Search", FormMethod.Get))
            {
                <div class="basic-search ">
                    <div class="form-group row">
                        <div class="col-md-7">
                            @Html.TextBox("searchterms", null, new { @class = "forum-search-text gray-input" })
                            <input type="submit" class="button-2 forum-search-button btn btn-primary" value="@T("Forum.SearchButton")" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-2">
                            @Html.CheckBox("adv", Model.ShowAdvancedSearch)
                            @Html.Label("adv", T("Forum.Search.AdvancedSearch").Text)
                        </div>
                    </div>
                </div>
                <div class="advanced-search" id="advanced-search" style="display: none;">
                    <div class="form-group row">
                        <div class="col-md-2">
                            <label>@T("Forum.Search.SearchInForum")</label>
                        </div>
                        <div class="col-md-6">
                            @Html.DropDownList("forumId", new SelectList(Model.ForumList, "Value", "Text", Model.ForumIdSelected), new { @class = "gray-dropdown" })
                        </div>

                    </div>
                    <div class="form-group row">
                        <div class="col-md-2">
                            <label>@T("Forum.Search.SearchWithin")</label>
                        </div>
                        <div class="col-md-6">
                            @Html.DropDownList("within", new SelectList(Model.WithinList, "Value", "Text", Model.WithinSelected), new { @class = "gray-dropdown" })
                        </div>

                    </div>
                    <div class="form-group row">
                        <div class="col-md-2">
                            <label>@T("Forum.Search.LimitResultsToPrevious")</label>
                        </div>
                        <div class="col-md-6">
                            @Html.DropDownList("limitDays", new SelectList(Model.LimitList, "Value", "Text", Model.LimitDaysSelected), new { @class = "gray-dropdown" })
                        </div>
                    </div>
                </div>
            }
        </div>

        <div>
            @if (Model.NoResultsVisisble == true)
            {
                <span class="alert alert-danger square-box result">@T("Forum.SearchNoResultsText")</span>
            }
            <div class="custom-page-box-border-less-div">
                <div id="cart_items">

                    @if (Model.SearchResultsVisible == true)
                    {
                        <div class="table-responsive cart_info">

                            <table class="table table-condensed">
                                <thead>
                                    <tr class="cart_menu">

                                        <td class="topic-name" colspan="2">
                                            @T("Forum.TopicTitle")
                                        </td>
                                        <td class="replies">
                                            @T("Forum.Replies")
                                        </td>
                                        <td class="views">
                                            @T("Forum.Views")
                                        </td>
                                        <td class="last-post">
                                            @T("Forum.LatestPost")
                                        </td>



                                    </tr>

                                </thead>
                                <tbody>
                                    @foreach (var topic in @Model.ForumTopics)
                                    {
                                        <tr>
                                            <td class="image">
                                                @{
                                                    var topicType = "post";
                                                    var topicText = String.Empty;
                                                    switch (topic.ForumTopicType)
                                                    {
                                                        case ForumTopicType.Normal:
                                                            topicType = "post";
                                                            break;
                                                        case ForumTopicType.Sticky:
                                                            topicType = "poststicky";
                                                            topicText = string.Format("[{0}]", T("Forum.Sticky"));
                                                            break;
                                                        case ForumTopicType.Announcement:
                                                            topicType = "post-annoucement";
                                                            topicText = string.Format("[{0}]", T("Forum.Announcement"));
                                                            break;
                                                        default:
                                                            topicType = "post";
                                                            break;
                                                    }
                                                    <div class="@topicType">
                                                    </div>
                                                }
                                                <i class="fa fa-folder-open-o fa-2x"></i>
                                            </td>
                                            <td class="topic-name">
                                                @if (!String.IsNullOrEmpty(topicText))
                                                {
                                                    <span class="topic-type">@topicText</span>
                                                }
                                                @Html.RouteLink(topic.Subject, "TopicSlug", new { id = topic.Id, slug = topic.SeName }, new { @class = "topic-title" })
                                                @if (topic.NumPosts > Model.PostsPageSize)
                                                {
                                                    <div class="topicspager">
                                                        @await Html.ForumTopicSmallPagerAsync(topic)
                                                    </div>
                                                }
                                                <div class="topic-starter">
                                                    @if (topic.CustomerId > 0)
                                                        @if (topic.CustomerId > 0)
                                                        {
                                                            <label>@T("Forum.Author"):</label>
                                                            if (topic.AllowViewingProfiles)
                                                            {
                                                                @Html.RouteLink(topic.CustomerName, "CustomerProfile", new { Id = topic.CustomerId })
                                                            }
                                                            else
                                                            {
                                                                @topic.CustomerName
                                                            }
                                                        }
                                                    </div>
                                                </td>
                                                <td class="replies">
                                                    @topic.NumReplies
                                                </td>
                                                <td class="views">
                                                    @topic.Views
                                                </td>
                                                <td class="last-post">
                                                    @await Component.InvokeAsync("ForumLastPost", new { forumPostId = topic.LastPostId, showTopic = false })
                                                </td>
                                            </tr>

                                        }

                                </tbody>
                            </table>

                        </div>
                    }

                </div>


                <div class="pagination-area">
                    <div class="pagination">
                        @pager
                    </div>

                </div>

            </div>

        </div>
    </div>
</div>