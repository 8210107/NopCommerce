@model HeaderLinksModel
@using System.Text.Encodings.Web



@*@Html.Action("Index","SideMenu",new { area = "" })*@

<ul class="nav navbar-nav navbar-right">
    @await Component.InvokeAsync("Widget", new { widgetZone = "header_links_before" })
    @await Component.InvokeAsync("AdminHeaderLinks")
    @if (Model.IsAuthenticated)
    {
        <li><a href="@Url.RouteUrl("CustomerInfo")" class="account">@Model.CustomerName</a></li>
        <li><a href="@Url.RouteUrl("Logout")" class="ico-logout">@T("Account.Logout")</a></li>
    }
    else
    {
        <li>
            <a href="@Url.RouteUrl("Register")" class="ico-register">
                <i class="fa fa-cog"></i>
                @T("Account.Register")
            </a>
        </li>
        <li>
            <a href="@Url.RouteUrl("Login")" class="ico-login">
                <i class="fa fa-power-off"></i>
                @T("Account.Login")
            </a>
        </li>
    }
    @if (Model.AllowPrivateMessages)
    {
        <li>
            <a href="@Url.RouteUrl("PrivateMessages", new { tab = "" })" class="ico-inbox">@T("PrivateMessages.Inbox") <span class="unread-private-messages">@Model.UnreadPrivateMessages</span> </a>
        </li>
        if (!string.IsNullOrEmpty(Model.AlertMessage))
        {
            <script type="text/javascript" asp-location="Footer">
                $(document).ready(function () {
                    $('#notificationModal').modal('show');
                });
            </script>
        }
    }
    @if (Model.ShoppingCartEnabled)
    {
        <li id="topcartlink" class="dropdown">
            <a href="@Url.RouteUrl("ShoppingCart")" class="ico-cart hidden-md hidden-lg">
                <span class="cart-label">
                    <i class="fa fa-shopping-cart"></i>
                    @T("ShoppingCart")
                </span>
                <span class="cart-qty">@T("ShoppingCart.HeaderQuantity", Model.ShoppingCartItems)</span>


            </a>

            @if (Model.ShoppingCartItems > 0)
            {
                <a href="@Url.RouteUrl("ShoppingCart")" class="ico-cart dropdown-toggle visible-md visible-lg" data-toggle="dropdown" data-hover="dropdown">
                    <span class="cart-label">
                        <i class="fa fa-shopping-cart"></i>
                        @T("ShoppingCart")
                    </span>
                    <span class="cart-qty">@T("ShoppingCart.HeaderQuantity", Model.ShoppingCartItems)</span>
                    <i class="fa fa-angle-down"></i>
                </a>



                <ul class="minicart-dropdown-menu hidden-xs">
                    <li>
                        @await Component.InvokeAsync("FlyoutShoppingCart")
                    </li>

                </ul>


            }
            else
            {
                <a href="@Url.RouteUrl("ShoppingCart")" class="ico-cart visible-md visible-lg">
                    <span class="cart-label">
                        <i class="fa fa-shopping-cart"></i>
                        @T("ShoppingCart")
                    </span>
                    <span class="cart-qty">@T("ShoppingCart.HeaderQuantity", Model.ShoppingCartItems)</span>
                    <i class="fa fa-angle-down"></i>


                </a>

            }


        </li>

    }
    @if (Model.WishlistEnabled)
    {
        <li>
            <a href="@Url.RouteUrl("Wishlist")" class="ico-wishlist">
                <span class="cart-label">
                    <i class="fa fa-star"></i>
                    @T("Wishlist")
                </span>
                <span class="wishlist-qty">@T("Wishlist.HeaderQuantity", Model.WishlistItems)</span>
            </a>
        </li>
    }
    @await Component.InvokeAsync("Widget", new { widgetZone = "header_links_after" })

</ul>


@*Notification window*@
<div class="modal fade" id="notificationModal" tabindex="-1" role="dialog" aria-labelledby="notificationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="notificationModalLabel">@T("Common.Notification")</h4>
            </div>
            <div class="modal-body">
                @Html.Raw(JavaScriptEncoder.Default.Encode(Model.AlertMessage))
            </div>
        </div>
    </div>
</div>
